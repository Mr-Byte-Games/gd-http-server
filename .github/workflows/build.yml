name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:        
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: linux-debug
            name: Linux Debug
            runner: ubuntu-latest
            target: debug
            platform: linux
            arch: x86_64
          - identifier: linux-release
            name: Linux Release
            runner: ubuntu-latest
            target: release
            platform: linux
            arch: x86_64
          - identifier: windows-debug
            name: Windows Debug
            runner: windows-latest
            target: debug
            platform: windows
            arch: x86_64
          - identifier: windows-release
            name: Windows Release
            runner: windows-latest
            target: release
            platform: windows
            arch: x86_64
          - identifier: macos-debug
            name: macOS Debug
            runner: macos-latest
            target: debug
            platform: macos
            arch: arm64
          - identifier: macos-release
            name: macOS Release
            runner: macos-latest
            target: release
            platform: macos
            arch: arm64

    runs-on: ${{ matrix.runner }}

    steps:
    - uses: actions/checkout@v4
    - name: Build (Debug)
      if: ${{ startsWith(matrix.target, 'debug') }}
      run: cargo build --verbose
    - name: Build (Release)
      if: ${{ startsWith(matrix.target, 'release') }}
      run: cargo build --release --verbose
    - name: Architve Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lib-${{ matrix.platform }}-${{ matrix.target }}
        path: |
          target/${{ matrix.target }}/*.dll
          target/${{ matrix.target }}/*.dylib
          target/${{ matrix.target }}/*.so
